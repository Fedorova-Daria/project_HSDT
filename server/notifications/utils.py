from teams.models import Team
from projects.models import ProjectApplication

def create_notification(
    user,  # –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
    notification_type,
    message=None,
    related_team=None,
    related_project=None,
    related_team_join_request=None,
    related_project_application=None
):
    from .models import Notification

    return Notification.objects.create(
        user=user,
        notification_type=notification_type,
        message=message,
        related_team=related_team,
        related_project=related_project,
        related_team_join_request=related_team_join_request,
        related_project_application=related_project_application
    )

# üîπ TEAM_REQUEST —à–∞–±–ª–æ–Ω—ã
"""def notify_team_join_requested(team_owner, join_request):
    create_notification(
        user=team_owner,
        notification_type=Notification.NotificationType.TEAM_REQUEST,
        message=f"{join_request.user} –ø–æ–¥–∞–ª(–∞) –∑–∞—è–≤–∫—É –≤ –∫–æ–º–∞–Ω–¥—É ¬´{join_request.team.name}¬ª.",
        related_team_join_request=join_request
    )

def notify_team_join_accepted(user, team, join_request):
    create_notification(
        user=user,
        notification_type=Notification.NotificationType.TEAM_REQUEST,
        message=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—É ¬´{team.name}¬ª –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞.",
        related_team_join_request=join_request
    )

def notify_team_join_declined(user, team, join_request):
    create_notification(
        user=user,
        notification_type=Notification.NotificationType.TEAM_REQUEST,
        message=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—É ¬´{team.name}¬ª –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.",
        related_team_join_request=join_request
    )

# üîπ PROJECT_REQUEST —à–∞–±–ª–æ–Ω—ã

def notify_project_application_submitted(project_owner, application):
    create_notification(
        user=project_owner,
        notification_type=Notification.NotificationType.PROJECT_REQUEST,
        message=f"{application.user} —Ö–æ—á–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø—Ä–æ–µ–∫—Ç—É ¬´{application.project.title}¬ª.",
        related_project_application=application
    )

def notify_project_application_accepted(user, project, application):
    create_notification(
        user=user,
        notification_type=Notification.NotificationType.PROJECT_REQUEST,
        message=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ ¬´{project.title}¬ª –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞.",
        related_project_application=application
    )

def notify_project_application_declined(user, project, application):
    create_notification(
        user=user,
        notification_type=Notification.NotificationType.PROJECT_REQUEST,
        message=f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ ¬´{project.title}¬ª –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.",
        related_project_application=application
    )

# üîπ SYSTEM (–ø–æ –∂–µ–ª–∞–Ω–∏—é)

def notify_system(user, message):
    create_notification(
        user=user,
        notification_type=Notification.NotificationType.SYSTEM,
        message=message
    )"""