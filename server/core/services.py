# core/services.py
from django.db.models import Prefetch
from .models import UniversityGroup
from users.models import Account
from teams.models import Team
from projects.models import Project, Idea

class StudentsTableService:
    
    @staticmethod
    def get_students_hierarchy_debug():
        """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º"""
        
        print("üîç –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ª–∞–¥–∫—É...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≥—Ä—É–ø–ø—ã
        groups = UniversityGroup.objects.all()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø: {groups.count()}")
        for group in groups:
            print(f"   - {group.name} ({group.institute})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –≥—Ä—É–ø–ø–∞–º–∏
        users_with_groups = Account.objects.filter(university_group__isnull=False)
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≥—Ä—É–ø–ø–∞–º–∏: {users_with_groups.count()}")
        for user in users_with_groups:
            print(f"   - {user.first_name} {user.last_name} -> {user.university_group}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã
        teams = Team.objects.all()
        print(f"üè¢ –í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥: {teams.count()}")
        for team in teams:
            print(f"   - {team.name} (—Å—Ç–∞—Ç—É—Å: {team.status}, —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {team.members.count()})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã –∏ –∏–¥–µ–∏
        projects = Project.objects.all()
        ideas = Idea.objects.all()
        print(f"üìã –ü—Ä–æ–µ–∫—Ç–æ–≤: {projects.count()}, –ò–¥–µ–π: {ideas.count()}")
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        institutes_dict = {}
        
        for user in users_with_groups:
            print(f"\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.first_name} {user.last_name}")
            
            # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤)
            user_teams = user.teams.all()
            print(f"   –ö–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_teams.count()}")
            
            teams_data = []
            for team in user_teams:
                print(f"   üè¢ –ö–æ–º–∞–Ω–¥–∞: {team.name}")
                
                # –ü–æ–ª—É—á–∞–µ–º –í–°–ï –ø—Ä–æ–µ–∫—Ç—ã –∏ –∏–¥–µ–∏ (–±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å—Ç–∞—Ç—É—Å–∞)
                all_projects = team.projects.all()
                all_ideas = team.ideas.all()
                print(f"      –ü—Ä–æ–µ–∫—Ç–æ–≤: {all_projects.count()}, –ò–¥–µ–π: {all_ideas.count()}")
                
                projects_ideas_data = []
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
                for project in all_projects:
                    print(f"         üìã –ü—Ä–æ–µ–∫—Ç: {project.title} (—Å—Ç–∞—Ç—É—Å: {project.status})")
                    projects_ideas_data.append({
                        'id': project.id,
                        'title': project.title,
                        'type': 'project',
                        'status': project.status
                    })
                
                # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–¥–µ–∏
                for idea in all_ideas:
                    print(f"         üí° –ò–¥–µ—è: {idea.title} (—Å—Ç–∞—Ç—É—Å: {idea.status})")
                    projects_ideas_data.append({
                        'id': idea.id,
                        'title': idea.title,
                        'type': 'idea',
                        'status': idea.status
                    })
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤/–∏–¥–µ–π
                teams_data.append({
                    'id': team.id,
                    'name': team.name,
                    'projects_or_ideas': projects_ideas_data
                })
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –∫–æ–º–∞–Ω–¥
            group = user.university_group
            institute_code = group.institute
            institute_name = group.get_institute_display()
            
            if institute_code not in institutes_dict:
                institutes_dict[institute_code] = {
                    'institute_code': institute_code,
                    'institute_name': institute_name,
                    'groups': {}
                }
            
            if group.name not in institutes_dict[institute_code]['groups']:
                institutes_dict[institute_code]['groups'][group.name] = {
                    'group_id': group.id,
                    'group_name': group.name,
                    'users': []
                }
            
            institutes_dict[institute_code]['groups'][group.name]['users'].append({
                'id': user.id,
                'full_name': f"{user.first_name} {user.last_name}".strip(),
                'email': user.email,
                'teams': teams_data,
                'avatar': user.avatar.url if user.avatar else None,
            })
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        institutes_data = []
        for institute in institutes_dict.values():
            institute['groups'] = list(institute['groups'].values())
            institutes_data.append(institute)
        
        print(f"\n‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {len(institutes_data)} –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤")
        return institutes_data