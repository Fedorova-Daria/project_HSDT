import axios from "axios";
import { saveTokens, getAccessToken, getRefreshToken, getUserData, clearStorage } from "./localStorage.js"; // –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
export async function refreshToken() {
  try {
    const refreshToken = getRefreshToken();
    if (!refreshToken) throw new Error("Refresh token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");

    const response = await axios.post(
      "http://127.0.0.1:8000/api/users/token/refresh/",
      { refresh: refreshToken }
    );

    const newAccessToken = response.data.access;
    saveTokens(newAccessToken, refreshToken); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π access-—Ç–æ–∫–µ–Ω

    console.log("–¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω:", newAccessToken);

    // üîπ **–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —Ä–µ—Ñ—Ä–µ—à–∞ —Ç–æ–∫–µ–Ω–∞**
    await getUserData();

    return newAccessToken;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:", error);

    // –ü—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º storage, –Ω–æ –ù–ï —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ /login
    clearStorage();

    return null; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç–∫–∞ —à–ª–∞ –¥–∞–ª—å—à–µ
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ access-—Ç–æ–∫–µ–Ω–∞
export async function fetchAccessToken() {
  let token = getAccessToken();

  if (!token) {
    console.warn("Access token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.");
    return null;
  }

  try {
    // –†–∞–∑–±–∏—Ä–∞–µ–º —Ç–æ–∫–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ
    const tokenPayload = JSON.parse(atob(token.split(".")[1]));
    const tokenExp = tokenPayload.exp; // –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
    const currentTime = Math.floor(Date.now() / 1000); // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è

    if (currentTime >= tokenExp) {
      console.log("Access token –∏—Å—Ç—ë–∫, –æ–±–Ω–æ–≤–ª—è–µ–º...");
      token = await refreshToken(); // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ access token:", error);
    return null;
  }

  return token; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∏–ª–∏ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
}